version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: experimentation-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: experimentation
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: experimentation-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # LocalStack for AWS services emulation
  localstack:
    image: localstack/localstack:latest
    container_name: experimentation-localstack
    ports:
      - "4566:4566"  # LocalStack edge port
    environment:
      - SERVICES=dynamodb,s3,kinesis,lambda,cognito,sqs,opensearch
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - ./localstack:/docker-entrypoint-initaws.d
      - localstack_data:/tmp/localstack

  # PGAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: experimentation-pgadmin
    depends_on:
      - postgres
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  # Backend API service (optional - uncomment to use)
  # api:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile.dev
  #   container_name: experimentation-api
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - ./backend:/app
  #   environment:
  #     - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/experimentation
  #     - REDIS_URL=redis://redis:6379/0
  #     - AWS_ENDPOINT_URL=http://localstack:4566
  #     - AWS_REGION=us-west-2
  #     - AWS_ACCESS_KEY_ID=test
  #     - AWS_SECRET_ACCESS_KEY=test
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #     localstack:
  #       condition: service_started

  # Frontend service (optional - uncomment to use)
  # web:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile.dev
  #   container_name: experimentation-web
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   environment:
  #     - NEXT_PUBLIC_API_URL=http://localhost:8000
  #   depends_on:
  #     - api

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:
  localstack_data:
